# CREATE ENVIRONMENT
$ cd development
$ virtualenv -p python3 .
$ source bin/activate
$ python -V
Python 3.7.4

# INSTALL DJANGO
$ pip install django
$ python -m django-admin --version
2.2.4

#START DJANGO PROJECT
$ django-admin startproject coffeehouse
$ ls -ltr coffeehouse/
-rwxr-xr-x manage.py
drwxr-xr-x coffeehouse

TIP: There are two folders of same name 'coffeehouse' as BASE_DIR and then 'coffeehouse' PROJECT_DIR, it is best practise to rename 
BASE_DIR like UPPERCASE letter so $mv coffeehouse COFFEEHOUSE

CAUTION: DO NOT RENAME PROJECT_DIR

# RUN THE SERVER
$ python manage.py runserver 0.0.0.0:8000

#DATABASE FOR DJANGO
- Django in its 'out-of-the-box' state is set up to communicate with SQLite
- SQLite is a lightweight relational database included with the Python distribution
- Django automatically creates a SQLite database for your project
- The Django config to connect to a database is done inside the settting.py file of a Django project in the DATABASES variable

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

- The Django DATABASES variable defines key-value pairs
- Each key represents a database reference name and the value is a Python dictionary with the database connection parameters
- The default reference name is used to indicate that any database related operation declared in a Django project be executed against this connection
- This means that unless otherwise specified, all database CRUD operations are done against the database defined with the default key
- The database connection parameters for the default database in this case are the keys ENGINE and NAME
- which represent a database engine (i.e. brand) and the name of the database instance, respectively
- The most important parameter of a Django database connection is the ENGINE value
- The Django database connection parameter NAME is used to identify a database instance
- and its value convention can vary depending on the database brand
- for SQLite NAME indicates the location of a flat file
- for MySQL it indicates the logical name of an instance
- USER & PASSWORD are not required when connecting to SQLite

# Django ENGINE value for different databases
- MySQL  django.db.backends.mysql
- SQLITE django.db.backends.sqlite3
Note: These are included in django installation so no extra package is required

# build Django base tables
