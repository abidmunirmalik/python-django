# DJANGO USER SYSTEM
- django user system is based on django.contrib.auth package that is built-in django framework

# TYPES OF DJANGO USERS
- User : If a user authenticates himself Django recognizes him as a User
- AnonymousUser: if a user just surfs an application without any authentication, Django recognizes him as an AnonymousUser

# USER SUB-TYPES
- superuser: The most powerful user with permissions to create, read, update and delete data in the Django admin
             which includes model records and other users
- staff:     A user marked as staff can access the Django admin But permissions to create, read, update and delete 
             data in the Django admin must be given explicitly to a user 
             By default, a superuser is marked as staff.
- active:    All users are marked as active if they're in good standing 
             Users marked as inactive aren't able to authenticate themselves 
             
# DJANGO USER SYSTEM
- The first user you'll want to create is a superuser

# CREATE SUPER USER VIA DJANGO SHELL
[user@coffeehouse ~]$ python manage.py shell
Python 2.7.3 (default, Apr 10 2013, 06:20:15) 
[GCC 4.6.3] on linux2
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
>>> from django.contrib.auth.models import User
>>> user = User.objects.create_superuser(username='angelinvestor',
                                 email='angelinvestor@coffeehouse.com',
                                 password='seedfunding')
                                 

# CREATE REGULAR USER VIA DJANGO SHELL
[user@coffeehouse ~]$ python manage.py shell
Python 2.7.3 (default, Apr 10 2013, 06:20:15) 
[GCC 4.6.3] on linux2
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
>>> from django.contrib.auth.models import User
>>> user = User.objects.create_user(username='downtownbarista',
                                 email='downtownbarista@coffeehouse.com',
                                 password='cappuccino')
>>> user.is_staff
False
>>> user.is_active
True
>>> user.is_superuser
False

>>> from django.contrib.auth.models import User
>>> user = User.objects.get(id=1)
>>> user.username = 'superadmin'
>>> user.save()

>>> userbig = User.objects.get(username='bigboss')
>>> userbig.is_superuser
True
>>> userbig.superuser = False
>>> userbig.first_name = 'Big'
>>> userbig.last_name = 'Boss'
>>> userbig.save()
>>> userbig.is_superuser
False
>>> userbig.get_full_name()
u'Big Boss'

>>> userbarista = User.objects.get(email='downtownbarista@coffeehouse.com')
>>> userbarista.email ='barista@coffeehouse.com'
>>> userbarista.save()
>>> userbarista.set_password('mynewpass')
>>> userbarista.check_password('oldpass')
False
>>> userbarista.check_password('mynewpass')
True
             
             
             
